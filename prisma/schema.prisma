generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

// To update DB
// npx prisma generate
// npx prisma migrate dev  --name init --create-only
// npx prisma migrate deploy
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // url      = env("DATABASE_URL_LOC")
}

model Merchant {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  fullname     String         @db.VarChar(300)
  username     String         @unique @db.VarChar(20)
  password     String
  phone        String
  pageName     String
  lat          String
  long         String
  city         String
  area         String?
  moneyReq     Boolean        @default(false)
  debt         Float          @default(0)
  Order        Order[]
  Invoice      Invoice[]
  OrderHistory OrderHistory[]
}

model Order {
  id             Int       @id @default(autoincrement())
  customerName   String
  customerPhone  String
  customerPhone2 String
  customerLat    String
  customerLong   String
  city           String
  area           String
  nearestPoint   String?
  orderAmount    Float
  orderCount     Int
  orderStatus    Int
  notes          String?
  reason         String?
  merchant       Merchant  @relation(fields: [merchantId], references: [id])
  merchantId     Int
  delegate       Delegate? @relation(fields: [delegateId], references: [id])
  delegateId     Int?
  createAt       DateTime  @default(now())
  updateAt       DateTime?
}

model OrderHistory {
  id             Int       @id @default(autoincrement())
  orderId        Int
  customerName   String
  customerPhone  String?
  customerPhone2 String?
  customerLat    String?
  customerLong   String?
  city           String?
  area           String?
  nearestPoint   String?
  orderAmount    Float
  orderCount     Int?
  orderStatus    Int
  notes          String?
  reason         String?
  merchant       Merchant  @relation(fields: [merchantId], references: [id])
  merchantId     Int
  delegate       Delegate? @relation(fields: [delegateId], references: [id])
  delegateId     Int?
  createAt       DateTime  @default(now())
}

model Delegate {
  id           Int            @id @default(autoincrement())
  fullname     String         @db.VarChar(300)
  username     String         @unique @db.VarChar(20)
  password     String
  phone        String
  city         String
  area         String
  Order        Order[]
  OrderHistory OrderHistory[]
}

model Super {
  id       Int    @id @default(autoincrement())
  fullname String @db.VarChar(300)
  username String @unique @db.VarChar(20)
  password String
  type     Int
}

model Invoice {
  id         Int      @id @default(autoincrement())
  amount     Float
  date       DateTime @default(now())
  type       Int
  merchant   Merchant @relation(fields: [merchantId], references: [id])
  merchantId Int
}

model ApiAuditLog {
  id             Int      @id @default(autoincrement())
  method         String
  urlPath        String
  headers        Json
  queryParams    Json
  requestBody    Json
  ipAddress      String
  responseStatus Int?
  responseBody   Json?
  responseTime   Int?
  errorMessage   String?
  errorStack     String?
  createdAt      DateTime @default(now())
}
